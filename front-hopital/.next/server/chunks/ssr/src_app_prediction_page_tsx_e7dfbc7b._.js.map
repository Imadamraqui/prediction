{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/justFolders/React-app1/front-hopital/src/app/prediction/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\n\r\n// Mapping des numéros vers les noms de maladies\r\nconst HEALTH_CLASSES = {\r\n  \"0\": \"Diabetes\",\r\n  \"1\": \"Heart Di\",\r\n  \"2\": \"Healthy\",\r\n  \"3\": \"Thalasse\",\r\n  \"4\": \"Anemia\",\r\n  \"5\": \"Thromboc\"\r\n}\r\n\r\nexport default function PredictionPage() {\r\n  const [file, setFile] = useState<File | null>(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [result, setResult] = useState<{\r\n    prediction: string\r\n    recommendations: string[]\r\n  } | null>(null)\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFile = e.target.files?.[0]\r\n    if (selectedFile) {\r\n      const fileType = selectedFile.name.split('.').pop()?.toLowerCase()\r\n      if (fileType !== 'csv' && fileType !== 'pdf') {\r\n        setError('Veuillez sélectionner un fichier CSV ou PDF')\r\n        setFile(null)\r\n        return\r\n      }\r\n      setFile(selectedFile)\r\n      setError(null)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!file) return\r\n\r\n    setLoading(true)\r\n    setError(null)\r\n    setResult(null)\r\n\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n\r\n    try {\r\n      console.log('Envoi de la requête au serveur...')\r\n      const response = await fetch('http://localhost:5000/predict/', {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n\r\n      console.log('Statut de la réponse:', response.status)\r\n      console.log('Headers de la réponse:', Object.fromEntries(response.headers.entries()))\r\n\r\n      if (!response.ok) {\r\n        let errorMessage = `Erreur ${response.status}: ${response.statusText}`\r\n        try {\r\n          const errorData = await response.json()\r\n          console.error('Données d\\'erreur du serveur:', errorData)\r\n          errorMessage = errorData.message || errorData.error || errorMessage\r\n        } catch (e) {\r\n          console.error('Erreur lors de la lecture de la réponse:', e)\r\n        }\r\n        throw new Error(errorMessage)\r\n      }\r\n\r\n      const data = await response.json()\r\n      console.log('Données reçues du serveur:', data)\r\n      \r\n      // Vérifier si la réponse contient les données attendues\r\n      if (!data.prediction || !data.recommendations) {\r\n        console.error('Format de réponse invalide:', data)\r\n        throw new Error('Format de réponse invalide du serveur')\r\n      }\r\n\r\n      setResult({\r\n        prediction: data.prediction,\r\n        recommendations: data.recommendations\r\n      })\r\n    } catch (err) {\r\n      console.error('Erreur complète:', err)\r\n      let errorMessage = 'Une erreur est survenue lors de la communication avec le serveur'\r\n      \r\n      if (err instanceof Error) {\r\n        errorMessage = err.message\r\n      } else if (err instanceof TypeError && err.message.includes('Failed to fetch')) {\r\n        errorMessage = 'Impossible de se connecter au serveur. Vérifiez que le serveur backend est en cours d\\'exécution sur http://localhost:5000'\r\n      }\r\n      \r\n      setError(errorMessage)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">\r\n            Prédiction de Santé\r\n          </h1>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Sélectionnez votre fichier (CSV ou PDF)\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\".csv,.pdf\"\r\n                onChange={handleFileChange}\r\n                className=\"block w-full text-sm text-gray-500\r\n                  file:mr-4 file:py-2 file:px-4\r\n                  file:rounded-full file:border-0\r\n                  file:text-sm file:font-semibold\r\n                  file:bg-blue-50 file:text-blue-700\r\n                  hover:file:bg-blue-100\"\r\n              />\r\n              {file && (\r\n                <p className=\"mt-2 text-sm text-gray-500\">\r\n                  Fichier sélectionné : {file.name}\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!file || loading}\r\n              className={`w-full py-2 px-4 rounded-md text-white font-medium\r\n                ${!file || loading \r\n                  ? 'bg-gray-400 cursor-not-allowed' \r\n                  : 'bg-blue-600 hover:bg-blue-700'\r\n                }`}\r\n            >\r\n              {loading ? 'Analyse en cours...' : 'Analyser'}\r\n            </button>\r\n          </form>\r\n\r\n          {error && (\r\n            <div className=\"mt-6 p-4 bg-red-50 text-red-700 rounded-md\">\r\n              <p className=\"font-medium\">Erreur :</p>\r\n              <p className=\"mt-1\">{error}</p>\r\n              <p className=\"mt-2 text-sm\">\r\n                Vérifiez que :\r\n                <ul className=\"list-disc list-inside mt-1\">\r\n                  <li>Le serveur backend est en cours d'exécution sur http://localhost:5000</li>\r\n                  <li>Le fichier est au format CSV ou PDF valide</li>\r\n                  <li>Le fichier contient les données requises</li>\r\n                </ul>\r\n              </p>\r\n              <p className=\"mt-2 text-sm\">\r\n                Pour plus de détails, ouvrez la console du navigateur (F12) et regardez les messages d'erreur.\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {result && (\r\n            <div className=\"mt-6 space-y-6\">\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                  Résultat :\r\n                </h3>\r\n                <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800\">\r\n                  {result.prediction}\r\n                </span>\r\n              </div>\r\n\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                  Recommandations :\r\n                </h3>\r\n                <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\r\n                  {result.recommendations.map((rec, index) => (\r\n                    <li key={index}>{rec}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}